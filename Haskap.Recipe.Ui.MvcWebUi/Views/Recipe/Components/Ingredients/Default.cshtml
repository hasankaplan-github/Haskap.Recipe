@using Haskap.Recipe.Application.Dtos.Recipes;

@inject Microsoft.AspNetCore.Antiforgery.IAntiforgery Antiforgery

@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@

@model List<IngredientOutputDto>

@{
    var antiforgeryToken = Antiforgery.GetAndStoreTokens(Context).RequestToken;
}


@foreach (var ingredientGroup in Model.GroupBy(x => x.IngredientGroupId))
{
    <div class="card card-success shadow-lg">
        <div class="card-header">
            <h3 class="card-title">@ingredientGroup.First().IngredientGroup.Name</h3>

            <div class="card-tools">
                <button type="button" class="btn btn-tool" data-card-widget="collapse">
                    <i class="fas fa-minus"></i>
                </button>
            </div>
            <!-- /.card-tools -->
        </div>
        <!-- /.card-header -->
        <div class="card-body">
            <div class="row">
                @foreach (var ingredient in ingredientGroup)
                {
                    <div class="col-md-3">
                        <div class="info-box">
                            @* <span class="info-box-icon bg-info"><i class="far fa-envelope"></i></span> *@

                            <div class="info-box-content">
                                <span class="info-box-text">@ingredient.Amount.Value @ingredient.Amount.Unit.Name @ingredient.Name</span>
                                <span class="info-box-number">
                                    <button class="btn btn-primary" id="updateIngredientButton" onclick="showUpdateIngredientModal('@ingredient.RecipeId', '@ingredient.Id');"><i class="fa-solid fa-pen-to-square"></i> Güncelle</button>
                                    <button class="btn btn-danger" id="deleteIngredientButton" onclick="deleteIngredient('@ingredient.RecipeId', '@ingredient.Id');"><i class="fa-solid fa-trash-can"></i> Sil</button>
                                </span>
                            </div>
                            <!-- /.info-box-content -->
                        </div>
                        <!-- /.info-box -->
                    </div>
                }
            </div>
        </div>
        <!-- /.card-body -->
    </div>
    <!-- /.card -->
}

<script>

    function deleteIngredient(recipeId, ingredientId) {
        Swal.fire({
            icon: 'question',
            title: 'Malzemeyi silmek istediğinizden emin misiniz?',
            //showDenyButton: true,
            showCancelButton: true,
            cancelButtonText: 'İptal',
            confirmButtonText: 'Sil',
            //denyButtonText: `Don't save`,
        }).then((confirmation) => {
            /* Read more about isConfirmed, isDenied below */
            if (confirmation.isConfirmed) {
                $.ajax({
                    type: "DELETE",
                    url: '@Url.Action("DeleteIngredient", "Recipe")',
                    headers: {
                        'RequestVerificationToken': '@antiforgeryToken'
                    },
                    data: {
                        recipeId: recipeId,
                        ingredientId: ingredientId
                    }
                }).done(function (result, status, xhr) {
                    Swal.fire(
                        'Başarılı',
                        'Malzeme başarıyla silindi.',
                        'success'
                    );

                    loadIngredientsViewComponent();
                });
            }
        });
    }

    function showUpdateIngredientModal(recipeId, ingredientId) {
        $.ajax({
            type: "GET",
            url: '/Recipe/LoadUpdateIngredientModalContentViewComponent', //'@Url.Action("LoadCreateReservationViewComponent", "Schedule")',
            data: {
                recipeId: recipeId,
                ingredientId: ingredientId
            }
        }).done(function (result, status, xhr) {
            $("#updateIngredientModalContent").html(result);
        });

        updateIngredientModal = new bootstrap.Modal(document.getElementById(modal.updateIngredientModalId), wizardModalOptions);
        updateIngredientModal.show();
    }

</script>
